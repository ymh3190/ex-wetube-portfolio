/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/public/js/watch/watch.js":
/*!**************************************!*\
  !*** ./src/public/js/watch/watch.js ***!
  \**************************************/
/***/ (() => {

eval("function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar video = document.querySelector(\"video\");\nvar playIcon = document.getElementById(\"playIcon\");\nvar volumeIcon = document.getElementById(\"volumeIcon\");\nvar volumeInput = document.getElementById(\"volumeInput\");\nvar expandIcon = document.getElementById(\"expandIcon\");\nvar videoPlayer = document.getElementById(\"videoPlayer\");\nvar totalTimeSpan = document.getElementById(\"totalTimeSpan\");\nvar currentTimeSpan = document.getElementById(\"currentTimeSpan\");\nvar views = document.getElementById(\"views\");\nvar likeIcon = document.getElementById(\"likeIcon\");\nvar dislikeIcon = document.getElementById(\"dislikeIcon\");\nvar likedCount = document.getElementById(\"likedCount\");\nvar subscribeBtn = document.getElementById(\"subscribeBtn\");\nvar playTimeInterval;\n\nfunction killPlayTimeInterval() {\n  if (playTimeInterval) {\n    clearInterval(playTimeInterval);\n    playTimeInterval = null;\n  }\n}\n\nfunction savePlayTime() {\n  var id = video.dataset.id;\n  playTimeInterval = setInterval( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(\"/api/record/playtime\", {\n              method: \"post\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                id: id\n              })\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })), 1000);\n}\n\nfunction handleClickPlay() {\n  if (video.paused) {\n    video.play();\n    playIcon.classList.remove(\"fa-play\");\n    playIcon.classList.add(\"fa-pause\");\n  } else {\n    video.pause();\n    playIcon.classList.remove(\"fa-pause\");\n    playIcon.classList.add(\"fa-play\");\n  }\n}\n\nfunction displayVolumeIcon(input) {\n  var _iterator = _createForOfIteratorHelper(volumeIcon.classList.entries()),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var _step$value = _slicedToArray(_step.value, 2),\n          i = _step$value[0],\n          el = _step$value[1];\n\n      if (i === 0) {\n        continue;\n      }\n\n      if (el === \"fa-solid\") {\n        continue;\n      }\n\n      if (input >= 60) {\n        if (!el.includes(\"fa-volume-high\")) {\n          volumeIcon.classList.remove(el);\n        }\n\n        volumeIcon.classList.add(\"fa-volume-high\");\n      } else if (input >= 40 && input < 60) {\n        if (!el.includes(\"fa-volume-low\")) {\n          volumeIcon.classList.remove(el);\n        }\n\n        volumeIcon.classList.add(\"fa-volume-low\");\n      } else if (input > 0 && input < 40) {\n        if (!el.includes(\"fa-volume-off\")) {\n          volumeIcon.classList.remove(el);\n        }\n\n        volumeIcon.classList.add(\"fa-volume-off\");\n      } else {\n        if (!el.includes(\"fa-volume-xmark\")) {\n          volumeIcon.classList.remove(el);\n        }\n\n        volumeIcon.classList.add(\"fa-volume-xmark\");\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n}\n\nfunction handleClickVolume() {\n  if (!video.muted) {\n    video.muted = true;\n    volumeInput.value = 0;\n  } else {\n    video.muted = false;\n    volumeInput.value = video.volume * 100;\n  }\n\n  displayVolumeIcon(volumeInput.value);\n}\n\nfunction handleInputVolume() {\n  video.volume = volumeInput.value / 100;\n  displayVolumeIcon(volumeInput.value);\n}\n\nfunction handleClickExpand() {\n  if (!document.fullscreenElement) {\n    videoPlayer.requestFullscreen();\n    expandIcon.classList.remove(\"fa-expand\");\n    expandIcon.classList.add(\"fa-compress\");\n  } else {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n      expandIcon.classList.remove(\"fa-compress\");\n      expandIcon.classList.add(\"fa-expand\");\n    }\n  }\n}\n\nfunction displayTimeSpan(time) {\n  if (time < 600) {\n    return new Date(time * 1000).toISOString().substring(15, 19);\n  } else if (time >= 600 && time < 3600) {\n    return new Date(time * 1000).toISOString().substring(14, 19);\n  } else if (time >= 3600) {\n    return new Date(time * 1000).toISOString().substring(11, 19);\n  }\n}\n\nfunction handleLoadedmetadataTotalTime() {\n  totalTimeSpan.innerText = displayTimeSpan(Math.ceil(video.duration));\n}\n\nfunction handleEnded() {\n  return _handleEnded.apply(this, arguments);\n}\n\nfunction _handleEnded() {\n  _handleEnded = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n    var id;\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            id = video.dataset.id;\n            _context2.next = 3;\n            return fetch(\"/api/views\", {\n              method: \"post\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                id: id\n              })\n            });\n\n          case 3:\n            if (playTimeInterval) {\n              clearInterval(playTimeInterval);\n              playTimeInterval = null;\n            }\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _handleEnded.apply(this, arguments);\n}\n\nfunction handleClickLike() {\n  likedCount.innerText = parseInt(likedCount, 10) + 1;\n}\n\nfunction handleKeydown(e) {\n  e.preventDefault();\n  var key = e.key,\n      metaKey = e.metaKey;\n\n  if (key === \"ArrowRight\") {\n    video.currentTime += 5;\n  } else if (key === \"ArrowLeft\") {\n    video.currentTime -= 5;\n  } else if (key === \"ArrowUp\") {\n    volumeInput.value += 5;\n    handleInputVolume();\n  } else if (key === \"ArrowDown\") {\n    volumeInput.value -= 5;\n    handleInputVolume();\n  } else if (key === \" \") {\n    handleClickPlay();\n  } else if (key === \"f\") {\n    handleClickExpand();\n  } else if (key === \"m\") {\n    handleClickVolume();\n  } // else if (metaKey && key === \"r\") {\n  //   window.location.reload();\n  // }\n\n}\n\nfunction handleClickSubscribe(_x) {\n  return _handleClickSubscribe.apply(this, arguments);\n}\n\nfunction _handleClickSubscribe() {\n  _handleClickSubscribe = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(e) {\n    var id;\n    return regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            id = video.dataset.id;\n            _context3.next = 3;\n            return fetch(\"/api/subscribe\", {\n              method: \"post\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                id: id\n              })\n            });\n\n          case 3:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _handleClickSubscribe.apply(this, arguments);\n}\n\nplayIcon.addEventListener(\"click\", handleClickPlay);\nvolumeIcon.addEventListener(\"click\", handleClickVolume);\nvolumeInput.addEventListener(\"input\", handleInputVolume);\nexpandIcon.addEventListener(\"click\", handleClickExpand);\nvideo.addEventListener(\"loadedmetadata\", handleLoadedmetadataTotalTime);\nvideo.addEventListener(\"ended\", handleEnded);\nvideo.addEventListener(\"dblclick\", handleClickExpand);\ndocument.addEventListener(\"keydown\", handleKeydown);\nlikeIcon.addEventListener(\"click\", handleClickLike);\nsubscribeBtn.addEventListener(\"click\", handleClickSubscribe); // let totalTimeInterval = setInterval(() => {\n//   if (totalTimeSpan.innerText === \"00:00\") {\n//     window.location.reload();\n//   }\n//   killPlayTimeInterval();\n// }, 500);\n\n//# sourceURL=webpack://wetube/./src/public/js/watch/watch.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/public/js/watch/watch.js"]();
/******/ 	
/******/ })()
;